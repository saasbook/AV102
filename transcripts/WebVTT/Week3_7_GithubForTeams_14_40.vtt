0
00:00:00,010 --> 00:00:03,080
Well let's talk about GitHub for teams and I've got

1
00:00:03,080 --> 00:00:06,790
my friend Paul here with me and in a second we're going to have a

2
00:00:06,790 --> 00:00:09,800
look at some pull requests ... I always found

3
00:00:09,800 --> 00:00:13,480
the term "pull request" to be somewhat confusing

4
00:00:13,480 --> 00:00:16,789
... it sort of like which direction is it? sorry?

5
00:00:16,789 --> 00:00:20,650
kind of going in? If we go to GitHub and we look for example at

6
00:00:20,650 --> 00:00:24,890
oh I don't know, AgileVentures autograder examples

7
00:00:24,890 --> 00:00:27,900
and I think we've got some pull requests

8
00:00:27,900 --> 00:00:31,529
in there but just so the idea of like, who is it? where is it?

9
00:00:31,529 --> 00:00:35,559
I guess now in my mind I got it relatively straight of okay so I'm

10
00:00:35,559 --> 00:00:39,350
sort of project manager on the autograder stuff, I created this

11
00:00:39,350 --> 00:00:40,070
repository

12
00:00:40,070 --> 00:00:43,590
on the AgileVentures site and that's up there.

13
00:00:43,590 --> 00:00:47,600
Now, anybody else in the world can say "Right I've made a change to some code ... they've

14
00:00:47,600 --> 00:00:51,420
forked it, we can see a list of the people who've forked this repository

15
00:00:51,420 --> 00:00:55,280
over here ... and the network graph always seems

16
00:00:55,280 --> 00:00:58,730
to take a while but anyway all these people have forked the

17
00:00:58,730 --> 00:01:02,469
AutograderExamples; they've got an entire clone as it were. Well clone is an unfortunate term because of course you

18
00:01:02,469 --> 00:01:05,850
use that to 'git clone', to 'git pull' stuff on to your local machine but

19
00:01:05,850 --> 00:01:09,020
by having a fork

20
00:01:09,020 --> 00:01:12,369
all of these other users have their own copy of

21
00:01:12,369 --> 00:01:16,159
AutograderExamples ... both in the cloud on GitHub and potentially on their own

22
00:01:16,159 --> 00:01:19,200
machine.  If we go back and look at ...

23
00:01:19,200 --> 00:01:22,390
the pull request then, a pull request is

24
00:01:22,390 --> 00:01:25,900
somebody saying: "look I've made some changes and I would like you to pull them in

25
00:01:25,900 --> 00:01:29,630
to your code base" ... and

26
00:01:29,630 --> 00:01:32,970
Paul's becoming an expert on pull requests. We'll just

27
00:01:32,970 --> 00:01:38,250
... and I'm becoming more and more of an expert on merging them ...

28
00:01:38,250 --> 00:01:42,049
so the process of preparing a pull request is basically that ...

29
00:01:42,049 --> 00:01:46,020
you have ... you push your stuff that you want to a

30
00:01:46,020 --> 00:01:46,810
feature branch

31
00:01:46,810 --> 00:01:51,380
on your fork and then when you get through

32
00:01:51,380 --> 00:01:55,850
to GitHub you need to switch to that branch and you'll find this

33
00:01:55,850 --> 00:01:58,909
pull requests button. It's sometimes a

34
00:01:58,909 --> 00:02:01,939
little bit difficult to find. I find the process of

35
00:02:01,939 --> 00:02:06,600
getting the pull request to point to the right location is sometimes

36
00:02:06,600 --> 00:02:09,739
... a little bit challenging ...

37
00:02:09,739 --> 00:02:12,750
I wonder if ... have we got a ...

38
00:02:13,330 --> 00:02:16,340
let me just think, if I grab a terminal window

39
00:02:16,340 --> 00:02:20,020
... like so and get into the

40
00:02:20,020 --> 00:02:24,170
... get into AgileVentures here

41
00:02:24,170 --> 00:02:28,580
AgileVentures and the AutograderExamples

42
00:02:28,580 --> 00:02:32,620
let's pull an old terminal window in over here

43
00:02:32,620 --> 00:02:36,000
... so I think we've actually maybe

44
00:02:36,000 --> 00:02:39,980
only got a master ... this is a relatively new project, we've only got the ...

45
00:02:39,980 --> 00:02:42,980
oh yes we've now got a develop branch ... so

46
00:02:43,980 --> 00:02:47,390
"git checkout develop" and

47
00:02:47,390 --> 00:02:50,480
let's have a look.  We've got there ... we've got the README. So I could do a very quick

48
00:02:50,480 --> 00:02:54,349
change to the README there ... for example

49
00:02:54,349 --> 00:02:57,349
I could just add ... a

50
00:02:58,290 --> 00:03:01,849
let's put it in right here.  Testing pull request

51
00:03:01,849 --> 00:03:05,739
like so. So I've made there some change

52
00:03:05,739 --> 00:03:09,239
and then if I do my "git status" here on the ...

53
00:03:09,239 --> 00:03:12,670
I've got a modified README so I could do git commit minus A M

54
00:03:12,670 --> 00:03:15,739
... there and say testing pull request

55
00:03:15,739 --> 00:03:18,840
like so and then do "git push

56
00:03:18,840 --> 00:03:22,269
origin develop"; in this case I'm just ... partly it's

57
00:03:22,269 --> 00:03:26,159
... oh yeah, ... oh you don't want ... oh dear I'll have to fix that and you will have to make sure

58
00:03:26,159 --> 00:03:29,670
that ... you've got the latest code

59
00:03:29,670 --> 00:03:33,230
as well otherwise you get these fast forward things and we'll do

60
00:03:33,230 --> 00:03:36,569
merge there ... let's try again "git push

61
00:03:36,569 --> 00:03:39,640
origin develop" and so

62
00:03:39,640 --> 00:03:43,950
one of the nice things actually GitHub will provide, often provides now; if I now go to GitHub

63
00:03:43,950 --> 00:03:45,010
and I reload

64
00:03:45,010 --> 00:03:51,060
this page it'll actually ... or usually ... I guess ...

65
00:03:51,060 --> 00:03:56,319
if you're doing ... that's funny, let's go over to develop and have a look. Recently in GitHub

66
00:03:56,319 --> 00:03:59,849
I believe it often has a pointer of what ... here's a recent commit ...

67
00:03:59,849 --> 00:04:03,040
has that actually pushed up properly? Let's go and have a look, yeah "git push origin develop"

68
00:04:03,040 --> 00:04:07,000
AutoGrader AgileVentures yeah - We're in the right place? - yes - so we've gone to develop here

69
00:04:07,000 --> 00:04:10,299
... yeah, sometimes I get a little

70
00:04:10,299 --> 00:04:13,769
thing that pops up here saying "Oh you've done a

71
00:04:13,769 --> 00:04:16,889
submission recently would you like to be

72
00:04:16,889 --> 00:04:20,000
pushing that here there and everywhere"; I think that's maybe only when you're on a fork

73
00:04:20,000 --> 00:04:23,220
but I can come in here to a pull request here

74
00:04:23,220 --> 00:04:27,060
I've pushed that up into develop there it ... you've got this green button "new pull request"

75
00:04:27,060 --> 00:04:31,410
and then you get this process where ooh yes you can compare across forks

76
00:04:31,410 --> 00:04:35,820
and so in this case I might just say I want ... and I always find this confusing

77
00:04:35,820 --> 00:04:39,090
it's like ... I want to get the develop

78
00:04:39,090 --> 00:04:43,310
and then the base here is the master so here I could create a pull

79
00:04:43,310 --> 00:04:43,889
request

80
00:04:43,889 --> 00:04:48,030
and this would be me saying "Right this change that I've made to the README file

81
00:04:48,030 --> 00:04:51,090
I want to have that go into the

82
00:04:51,090 --> 00:04:55,820
the master branch" ... but potentially if I was on somewhere else, I might say

83
00:04:55,820 --> 00:04:59,110
I want to compare across forks and I could do a pull request over to Paul's

84
00:04:59,110 --> 00:05:04,680
thing here so for example; so base fork, aah it's confused there ... so if we take that's Paul's

85
00:05:04,680 --> 00:05:08,039
repo and I could for example here this would be me saying right

86
00:05:08,039 --> 00:05:11,440
I want this change - this recent changeset that I've done to AgileVentures'

87
00:05:11,440 --> 00:05:12,009
develop

88
00:05:12,009 --> 00:05:15,130
I want to push that over to Paul's master branch

89
00:05:15,130 --> 00:05:19,169
and I might say okay rather than his master I might wanna send this to

90
00:05:19,740 --> 00:05:22,780
his develop and so this would be me

91
00:05:22,780 --> 00:05:27,100
sending now from our kind of upstream pull request back down to the Paul's develop;

92
00:05:27,100 --> 00:05:31,030
which'd be a little bit strange but at least you're seeing the interface

93
00:05:31,030 --> 00:05:34,460
here there's this ... you click this button to create the pull request

94
00:05:34,460 --> 00:05:37,650
and then you describe what you're doing and you make sure you

95
00:05:37,650 --> 00:05:38,120
leave

96
00:05:38,120 --> 00:05:41,550
sensible comments so the person who would later on merge your pull request

97
00:05:42,150 --> 00:05:45,970
knows what's going on so ... I think that's the key thing

98
00:05:45,970 --> 00:05:49,169
there Imean you can review the changes actually I guess that I

99
00:05:49,729 --> 00:05:54,000
didn't ... we can see there a list of the changes there

100
00:05:54,000 --> 00:05:57,410
... personally as a person who is often merging lots of pull requests

101
00:05:57,410 --> 00:06:01,250
I say the simpler the set of files that's coming up; the smaller the number of files, the smaller the number

102
00:06:01,250 --> 00:06:01,910
changes

103
00:06:01,910 --> 00:06:05,830
the better ... that's all â€¦ makes it that much more easy to manage

104
00:06:05,830 --> 00:06:08,960
... but yeah make sure that you describe the pull quest

105
00:06:08,960 --> 00:06:12,319
and then you're done and you'll end up

106
00:06:12,319 --> 00:06:16,550
in a situation where the administrator of the project that you're

107
00:06:16,550 --> 00:06:20,380
pushing to ... if we now ... can I now

108
00:06:20,380 --> 00:06:23,889
yeah, maybe there ... we'll have a situation like this so here we've got

109
00:06:23,889 --> 00:06:26,889
previous pull requests that Paul has submitted to me

110
00:06:27,389 --> 00:06:30,889
... let's go and have a look over here [Paul] oh did you not submit that one?

111
00:06:30,889 --> 00:06:34,039
[Sam] I think I didn't submit that one; that would have been just a spurious one to submit [Paul] gotcha

112
00:06:34,580 --> 00:06:37,720
[Sam] to you I was just sort of ... I kinda; we

113
00:06:37,720 --> 00:06:42,740
... I think that the ... I find the interface for kinda going through that

114
00:06:42,740 --> 00:06:46,150
a little bit counter-intuitive; we've mentioned

115
00:06:46,150 --> 00:06:47,150
some of the things there.

116
00:06:47,150 --> 00:06:50,569
At least knowing where to find the button is kind of a key thing

117
00:06:50,569 --> 00:06:54,610
setting up to do a pull request [Paul] a lot of the ... every time you select

118
00:06:54,610 --> 00:06:57,610
the branch it will jump back to

119
00:06:58,509 --> 00:07:01,590
where you have to click to edit button [Sam] yes yes

120
00:07:01,590 --> 00:07:05,039
there's definitely ... I love pull requests; there's definitely

121
00:07:05,039 --> 00:07:08,060
a couple of HCI issues there in

122
00:07:08,060 --> 00:07:11,740
the GitHub interface, but yeah and so actually as part of

123
00:07:12,500 --> 00:07:16,360
the whole 169 course you are never required to make a pull

124
00:07:16,360 --> 00:07:19,720
request but they are if you're working with a distributed team

125
00:07:20,349 --> 00:07:24,060
... such as for the autograders, they are the lifeblood

126
00:07:24,060 --> 00:07:27,150
are they not Paul? Its being able to do ... [Paul] it's how things get done!

127
00:07:27,150 --> 00:07:30,169
[Sam] yeah absolutely that's how people

128
00:07:30,169 --> 00:07:33,220
contribute into the center; so to a certain extent

129
00:07:33,220 --> 00:07:36,410
in the first instance if you're just ... you might be getting used to

130
00:07:36,410 --> 00:07:37,289
submitting

131
00:07:37,289 --> 00:07:40,860
pull requests ... then there's the process of you actually being - sort of managing an open

132
00:07:40,860 --> 00:07:42,060
source project or managing

133
00:07:42,060 --> 00:07:46,000
a private project for that matter, but then want to merge these pull requests

134
00:07:46,000 --> 00:07:50,830
and so what you'll get is a status. git will check if it can merge automatically

135
00:07:50,830 --> 00:07:54,000
... so for example if we look here ...

136
00:07:54,000 --> 00:07:57,419
we've got this thing for helping with continuous integration

137
00:07:58,030 --> 00:08:02,349
work on the autograders and we've got Travis installed and so that tells us

138
00:08:02,349 --> 00:08:06,370
that all of the tests have passed and that's great to have

139
00:08:06,370 --> 00:08:09,840
we are hoping this time around in the in the 169 MOOC to include a continuous

140
00:08:09,840 --> 00:08:10,660
integration

141
00:08:10,660 --> 00:08:14,039
homework we'll see about that, maybe we can even work a pull request

142
00:08:14,039 --> 00:08:17,720
thing in there, that would be good I think but so I can now ...

143
00:08:17,720 --> 00:08:21,250
assuming that I'm happy with this and I often ... I'll be

144
00:08:21,789 --> 00:08:25,199
here as me as the person who might be doing the merging. I'm like right

145
00:08:25,199 --> 00:08:28,900
yes ... we're setting up so we can use our

146
00:08:28,900 --> 00:08:32,140
GitHub API keys to

147
00:08:32,140 --> 00:08:35,440
do certain sorts of testing in the autograder; good show,

148
00:08:35,440 --> 00:08:38,669
and the files changed I can look through. We've got

149
00:08:39,250 --> 00:08:42,490
some features changed there, we've got some

150
00:08:42,490 --> 00:08:46,160
steps that support them ... using Travis

151
00:08:46,160 --> 00:08:49,790
secure key and so on ... I've looked through this

152
00:08:49,790 --> 00:08:53,290
in the past and think I've identified that I'm pretty happy with it ... and it's always

153
00:08:53,290 --> 00:08:54,470
fantastic to see ...

154
00:08:54,470 --> 00:08:57,830
... this is a lovely size ... three files changed

155
00:08:57,830 --> 00:09:02,170
one of them is a Cucumber feature, another one is a

156
00:09:02,170 --> 00:09:06,810
spec and then there we go and maybe a little bit of application code

157
00:09:06,810 --> 00:09:10,810
actually this project is a lot about updating the continuous integration

158
00:09:10,810 --> 00:09:13,880
so this is the kind of thing, the kind of size

159
00:09:13,880 --> 00:09:17,610
of pull request that as a person looking to kind of get merged

160
00:09:17,610 --> 00:09:21,360
developers' code in as quickly as possible I love to see

161
00:09:21,360 --> 00:09:24,990
so I think we can we can have ... I mean we're also being told here 1) that there's no

162
00:09:24,990 --> 00:09:25,920
conflicts

163
00:09:25,920 --> 00:09:30,100
and 2) that all the tests have passed so I'm very happy to merge that pull request.

164
00:09:30,100 --> 00:09:34,019
It does give you a second chance, but having done so

165
00:09:34,019 --> 00:09:38,279
we end up in this situation here and we go back and this code is now

166
00:09:38,279 --> 00:09:42,130
pulled into ... so that was from Paul's develop branch into the main

167
00:09:42,130 --> 00:09:42,670
AgileVentures'

168
00:09:42,670 --> 00:09:45,670
develop branch there. We now see that pull request

169
00:09:45,670 --> 00:09:48,700
has gone from the open to the closed side

170
00:09:48,700 --> 00:09:52,260
and I can now get that code on my local machine here

171
00:09:52,260 --> 00:09:55,610
I can do "git pull origin develop"

172
00:09:55,610 --> 00:09:58,790
like so and then I've got

173
00:09:58,790 --> 00:10:02,260
my copy of that code and I can do things like

174
00:10:02,260 --> 00:10:05,430
deploy it to production and so on and so forth

175
00:10:05,430 --> 00:10:08,709
... so that the process of merging

176
00:10:08,709 --> 00:10:12,250
pull requests ... the other thing that you can ... you may find yourself doing as

177
00:10:12,250 --> 00:10:13,310
a project manager

178
00:10:13,310 --> 00:10:17,550
is doing cherry-picking where somebody may have submitted a pull request

179
00:10:17,550 --> 00:10:21,160
and in this case let's go  back to the one that Paul had

180
00:10:21,160 --> 00:10:25,490
there.  It was this one wasn't it ... so the actual we can look at the commits.

181
00:10:25,490 --> 00:10:28,670
There was - three commits and it was sort of a coherent whole

182
00:10:28,670 --> 00:10:29,640
there was no

183
00:10:29,640 --> 00:10:34,110
need to - to break it up ... probably the best example I think that I

184
00:10:34,110 --> 00:10:37,959
had of a pull request ... if we just go to a different project this

185
00:10:37,959 --> 00:10:40,959
was earlier on on LocalSupport ...

186
00:10:41,480 --> 00:10:44,589
I guess rather than going to another Autograders one and doing

187
00:10:44,589 --> 00:10:48,110
... let's go and see here.  If we go into LocalSupport

188
00:10:48,110 --> 00:10:51,320
there was some people who got involved and did

189
00:10:52,010 --> 00:10:55,070
some pull requests on LocalSupport and

190
00:10:55,070 --> 00:10:58,200
... they were relatively like ... I wonder if we can go, if we can quickly find

191
00:10:59,230 --> 00:11:02,440
they're gonna be sufficiently long ago

192
00:11:02,440 --> 00:11:05,440
that I can't find them, let's see

193
00:11:06,010 --> 00:11:09,560
dn da dn da dah. That was by Daniel and not the surname

194
00:11:10,110 --> 00:11:13,110
but ... mmm

195
00:11:13,880 --> 00:11:16,880
yeah there's so many pull requests from ...

196
00:11:17,470 --> 00:11:22,070
yeah that was from before Christmas mmmm anyway let's let's since I can't immediately

197
00:11:22,070 --> 00:11:25,100
find that, let's take ... another pull

198
00:11:25,100 --> 00:11:28,420
request from the AutoGraderExamples and go in and so we might see

199
00:11:28,930 --> 00:11:32,180
which was is, let's see which one is more complex

200
00:11:32,180 --> 00:11:35,459
... again not so complex but say for example

201
00:11:36,250 --> 00:11:40,050
thats on reviewing this pull request I decided well yes actually I want

202
00:11:40,630 --> 00:11:43,839
these three commits but I don't want this last one

203
00:11:43,839 --> 00:11:47,660
... assuming I've got an ongoing dialogue with someone like Paul which

204
00:11:47,660 --> 00:11:51,389
at the moment I have which is fantastic ... I might be able to say "please update your pull request; maybe

205
00:11:51,389 --> 00:11:52,410
you could remove

206
00:11:52,410 --> 00:11:55,709
that commit" or what have you ... I might be wanting

207
00:11:55,709 --> 00:11:59,160
just to pull in ... certain elements; certain of

208
00:11:59,160 --> 00:12:02,480
these commits and if ... that would involve me

209
00:12:02,480 --> 00:12:06,240
doing cherry-picking and so basically I would

210
00:12:06,240 --> 00:12:09,700
check out a

211
00:12:09,700 --> 00:12:13,570
version of Paul's code locally ... so for example if we look at

212
00:12:13,570 --> 00:12:16,570
if we look at this, Paul's got that on a tags

213
00:12:17,139 --> 00:12:20,670
branch there so I might for example I might do "git

214
00:12:20,670 --> 00:12:23,740
fetch Paul" here I've already ... I'll show you, I'm set up with

215
00:12:23,740 --> 00:12:27,110
Paul as a remote.  I'm going to do "git fetch

216
00:12:27,110 --> 00:12:31,529
Paul" like so ... and I'll then see I've got his tags thing

217
00:12:31,529 --> 00:12:34,630
so I could then do ...

218
00:12:34,630 --> 00:12:39,450
"git checkout paul tags" and is very similar to the startup for

219
00:12:39,450 --> 00:12:43,230
GitHub pong ... but rather than create my own

220
00:12:43,230 --> 00:12:47,550
tags branch as I would be doing if we were going to start doing a bit of GitHub pong,

221
00:12:47,550 --> 00:12:50,550
now I've got access to his ... I

222
00:12:51,089 --> 00:12:54,450
... actually I didn't need to checkout I could have just fetched it

223
00:12:54,450 --> 00:12:57,470
but so I could be exploring things in this. Particularly before even

224
00:12:57,470 --> 00:12:58,320
deciding to do

225
00:12:58,320 --> 00:13:02,060
a cherry picking or a merge, this is very very handy to be able to check out that

226
00:13:02,060 --> 00:13:03,209
person's

227
00:13:03,209 --> 00:13:07,089
entire code as it was and sort of play with it

228
00:13:07,089 --> 00:13:10,570
in the environment on my own computer; that's extraordinarily useful ...

229
00:13:10,570 --> 00:13:15,279
but so what I might for example be able to do if I might just go "git checkout develop"

230
00:13:15,279 --> 00:13:18,510
what I could be doing here

231
00:13:18,510 --> 00:13:22,200
is I could be grabbing ... just saying that I want to merge ... I could be doing something

232
00:13:22,200 --> 00:13:22,920
like

233
00:13:22,920 --> 00:13:26,480
git cherry-pick and then

234
00:13:26,480 --> 00:13:29,800
... yep cherry-pick

235
00:13:29,800 --> 00:13:33,190
go on ... yep and then ... there we go

236
00:13:33,190 --> 00:13:36,459
so that would be that would be me grabbing just

237
00:13:36,459 --> 00:13:39,540
this ... let's say

238
00:13:39,540 --> 00:13:43,769
just this commit out of these four or whatever I fancied

239
00:13:43,769 --> 00:13:47,100
and then playing with it until I got it to work on so and so forth. So

240
00:13:47,100 --> 00:13:51,350
... and then you know if Paul himself wasn't available to update the

241
00:13:51,350 --> 00:13:52,139
pull request

242
00:13:52,139 --> 00:13:55,829
then I might well just end of cherry-picking a few things

243
00:13:55,829 --> 00:13:59,910
and then closing its and maybe opening a new pull request if

244
00:13:59,910 --> 00:14:02,970
I'm not the project manager but there we go so

245
00:14:02,970 --> 00:14:05,970
... I would say ...

246
00:14:06,899 --> 00:14:10,839
distributed teams this sort of ... for the process of making pull requests,

247
00:14:10,839 --> 00:14:11,769
merging pull requests,

248
00:14:11,769 --> 00:14:14,880
cherry-picking, triaging them handling them ... that's the life

249
00:14:14,880 --> 00:14:15,630
blood

250
00:14:15,630 --> 00:14:19,350
of what we do in AgileVentures and the best way to get experience of it is to keep

251
00:14:19,350 --> 00:14:22,800
just do it! I mean there are many many other open source projects besides

252
00:14:22,800 --> 00:14:26,380
AgileVentures but we will be very happy to help you

253
00:14:26,380 --> 00:14:30,310
plan and experience all of these things in regular hangouts,

254
00:14:30,310 --> 00:14:34,060
one-to-one, face-to-face so to speak; if you can call Google Hangouts face-to-face

255
00:14:34,060 --> 00:14:37,970
Alright ... I think we'll have to say goodbye for this week and look forward to seeing you

256
00:14:37,970 --> 00:14:38,250
next week

