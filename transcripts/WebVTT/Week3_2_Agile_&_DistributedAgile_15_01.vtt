WEBVTT

0
00:00:00.040 --> 00:00:03.830
So let's talk about Agile and in particular distributed Agile.

1
00:00:03.830 --> 00:00:06.950
So you should generally be familiar with Agile

2
00:00:06.950 --> 00:00:10.790
as it came up in the 169 course ... you may have seen

3
00:00:10.790 --> 00:00:14.269
some of the Dilbert cartoons on the topic

4
00:00:14.269 --> 00:00:18.680
which are I think um … sometimes are … somewhat close to the mark in that of course

5
00:00:18.680 --> 00:00:22.090
Agile as a concept has become very broad lots of people are using its

6
00:00:22.090 --> 00:00:25.920
... you know I think there's there's an idea that

7
00:00:25.920 --> 00:00:29.109
it's just sort of just like start hacking, start coding and

8
00:00:29.109 --> 00:00:32.290
you know just do more work with fewer people and so on

9
00:00:32.290 --> 00:00:35.579
... you know I think if

10
00:00:35.579 --> 00:00:38.879
used inappropriately that's what it can feel like.

11
00:00:38.879 --> 00:00:42.780
Ken Schwaber who's the scrum co-inventor ... says that you know - "Agile

12
00:00:42.780 --> 00:00:45.520
can lower the risks associated with doing development" but it won't -

13
00:00:45.520 --> 00:00:48.750
it won't show you how to actually do the coding ...

14
00:00:48.750 --> 00:00:51.789
so it kinda, it's challenging.

15
00:00:51.789 --> 00:00:55.570
Let's sort of consider the main alternative,

16
00:00:55.570 --> 00:00:59.870
again already introduced to you in the 169 course, this big design upfront

17
00:00:59.870 --> 00:01:02.890
typified by the waterfall.  There's other, spiral other things

18
00:01:02.890 --> 00:01:06.950
... but just - you know - for review; the waterfall process has

19
00:01:06.950 --> 00:01:07.880
this idea that

20
00:01:07.880 --> 00:01:11.320
you know you can get all the requirements like done and set in stone

21
00:01:11.320 --> 00:01:13.970
and when you finish doing the requirements and you move on

22
00:01:13.970 --> 00:01:17.810
to design, and implementation and so on and the idea really is that

23
00:01:17.810 --> 00:01:20.880
if you've got the specification precisely what you want in

24
00:01:20.880 --> 00:01:24.710
enough detail then you can exactly produce

25
00:01:24.710 --> 00:01:28.640
the software that the customer wants, it'll cost the appropriate

26
00:01:28.640 --> 00:01:32.220
amount and be delivered on time and so on and so forth ...

27
00:01:32.220 --> 00:01:35.350
and you know, I think in principal

28
00:01:35.350 --> 00:01:38.840
the waterfall approach can work or other variations on it -

29
00:01:38.840 --> 00:01:41.850
but it assumes that you've got a really wonderful understanding,

30
00:01:41.850 --> 00:01:45.170
an absolutely fantastic understanding of requirements at the start

31
00:01:45.170 --> 00:01:48.700
and you know ... there's lots of pieces to it. There's

32
00:01:48.700 --> 00:01:52.340
different phases we can see in the diagram in the previous slide; checkpoints,

33
00:01:52.340 --> 00:01:53.159
deliverables;

34
00:01:53.159 --> 00:01:56.600
we're trying to finish you know each phase before we move on to the next one

35
00:01:56.600 --> 00:02:00.500
... and I think that there there is the sort of sensible thing under there is that

36
00:02:00.500 --> 00:02:03.610
yes if you can work out that you know

37
00:02:03.610 --> 00:02:07.950
a … a bug earlier in the process then you can save yourself a lot of time

38
00:02:07.950 --> 00:02:11.720
later on; if we look back at the flow, if you can work out

39
00:02:11.720 --> 00:02:15.550
the right way to design something before you're actually constructing

40
00:02:15.550 --> 00:02:19.310
it and you've put the are hundreds and hundreds of hours into creating something,

41
00:02:19.310 --> 00:02:22.770
if you can work out that error earlier on then yes

42
00:02:22.770 --> 00:02:25.879
absolutely fantastic and this sort of comes from the

43
00:02:25.879 --> 00:02:29.129
civil engineering; mechanical engineering world ...

44
00:02:29.129 --> 00:02:33.000
where making changes you know later on is prohibitively expensive

45
00:02:33.000 --> 00:02:36.150
but software as we know is - is somewhat different

46
00:02:36.150 --> 00:02:41.030
and so sort of in a reaction to waterfall

47
00:02:41.030 --> 00:02:44.030
and ther related things critics have you know said

48
00:02:44.030 --> 00:02:47.430
it's difficult to really know what the requirements are in advance it's - it's

49
00:02:47.430 --> 00:02:47.989
also

50
00:02:47.989 --> 00:02:51.420
a lot of the time you're working with technology, new software is coming

51
00:02:51.420 --> 00:02:52.510
along all the time

52
00:02:52.510 --> 00:02:56.500
you're not sure what it's able to do ... lots of testing required.

53
00:02:56.500 --> 00:03:00.330
So one of the things that came up was this manifesto for Agile Software development.

54
00:03:00.330 --> 00:03:04.110
It's I think about, coming up to about thirteen years ago

55
00:03:04.110 --> 00:03:07.860
now and I imagine many of you have heard this before but just to

56
00:03:07.860 --> 00:03:11.230
to review that they sort of set up

57
00:03:11.230 --> 00:03:14.550
two styles here.  So sort of

58
00:03:14.550 --> 00:03:17.900
valuing individual and interactions more than processes and tools;

59
00:03:18.409 --> 00:03:22.349
we're valuing working software more than comprehensive documentation

60
00:03:22.349 --> 00:03:25.360
you know we're more focused on customer collaboration than contract negotiation;

61
00:03:25.980 --> 00:03:29.400
and more focused on responding to change over following a plan and

62
00:03:29.400 --> 00:03:33.549
I think often you know in sort of the worst view of Agile you say right

63
00:03:33.549 --> 00:03:37.750
no plans, no contracts, no documentation, no process and no tools, nothing, woo ooo ooo, let's all go run

64
00:03:37.750 --> 00:03:38.810
around in a field and

65
00:03:38.810 --> 00:03:42.269
roll around like rub ourselves with the code or something ...

66
00:03:42.269 --> 00:03:45.580
the key think that's often missed is that we're talking about you know

67
00:03:45.580 --> 00:03:50.580
what we don't want is you know the specifics of the contract

68
00:03:50.580 --> 00:03:53.830
to have bound us so tightly that we can't actually work with the customer to work out

69
00:03:53.830 --> 00:03:55.099
what they really want

70
00:03:55.099 --> 00:03:59.010
... we don't want such a fantastic - enormous amounts of

71
00:03:59.010 --> 00:04:02.439
energy focused on the plan and then following the plan that we can't

72
00:04:02.439 --> 00:04:06.290
then respond to a change in the business needs, in this that and the

73
00:04:06.290 --> 00:04:06.640
other

74
00:04:06.640 --> 00:04:09.799
... you know that doesn't mean we don't want any documentation at all

75
00:04:09.799 --> 00:04:13.349
but documentation can quickly go out of date so you know working software

76
00:04:13.349 --> 00:04:15.790
working prototypes that people can say: "yes, that actually does do what I want"

77
00:04:15.790 --> 00:04:19.810
is more valuable and you know getting people communicating with each

78
00:04:19.810 --> 00:04:20.269
other

79
00:04:20.269 --> 00:04:24.630
is you know more important than them necessarily using a particular process

80
00:04:24.630 --> 00:04:28.000
or tool but again it's all about being flexible

81
00:04:28.000 --> 00:04:31.199
... I'm so many of you've seen the old ... the tree swing

82
00:04:31.199 --> 00:04:36.040
diagram which predates Agile by quite a long way

83
00:04:36.040 --> 00:04:39.750
but I think it's, there's you know a mentality there about this

84
00:04:39.750 --> 00:04:42.759
the danger that in a very

85
00:04:42.759 --> 00:04:45.949
large-scale project that what people propose

86
00:04:46.710 --> 00:04:50.880
gets handed off to another team and then a different team like

87
00:04:50.880 --> 00:04:53.880
conceivably in waterfall you have entirely different groups of people

88
00:04:54.410 --> 00:04:57.680
doing these different - different stages and and you get this

89
00:04:57.680 --> 00:05:01.039
this danger of

90
00:05:01.039 --> 00:05:04.039
things being fundamentally misinterpreted ... so it's ...

91
00:05:05.280 --> 00:05:08.280
yeah ... it's not a panacea ... I'm certainly enjoying

92
00:05:08.870 --> 00:05:12.590
you know using Agile and I think many other people are as well ... maybe we should just review

93
00:05:12.590 --> 00:05:17.000
the Agile Principles. I mean it's ... I think, the proponents of Waterfall, proponents of Agile

94
00:05:17.000 --> 00:05:20.590
can all agree right that we want to make

95
00:05:20.590 --> 00:05:23.699
useful software and we want to make it ...

96
00:05:23.699 --> 00:05:27.130
we want to keep customers satisfied and we want to do it within budget and

97
00:05:27.130 --> 00:05:31.389
and all of these things and maybe where there's a difference of opinion sometimes is about how to

98
00:05:31.389 --> 00:05:34.729
achieve that; the devil is in the details

99
00:05:34.729 --> 00:05:38.120
but I think at least for me personally reading the Agile principles

100
00:05:38.120 --> 00:05:41.400
it all makes a lot of sense and we'll see how this relates to

101
00:05:41.400 --> 00:05:42.400
distributed teams in

102
00:05:42.400 --> 00:05:47.070
a minute. But so ... yeah customer satisfaction by rapid delivery of

103
00:05:47.070 --> 00:05:51.009
useful software so that's - that's critical yep, no complaint there

104
00:05:51.009 --> 00:05:54.380
... welcoming requirement changes at all times and that sounds like that's

105
00:05:54.380 --> 00:05:55.479
potentially challenging.

106
00:05:55.479 --> 00:05:59.600
I think it's an acknowledgement really of the fact that business is changing fast.

107
00:05:59.600 --> 00:06:03.430
If a company is working in a particular marketplace and you

108
00:06:03.430 --> 00:06:03.710
know

109
00:06:03.710 --> 00:06:07.520
a new challenge evolves it's like, well, actually we need a different thing

110
00:06:07.520 --> 00:06:10.840
and you can sort of sit there and say: "well what you asked for was this so that's all we're gonna give

111
00:06:10.840 --> 00:06:11.319
you"

112
00:06:11.319 --> 00:06:15.449
... or you could say: "well you know ... okay ... how can we change what we've done

113
00:06:15.449 --> 00:06:16.280
so far to meet

114
00:06:16.280 --> 00:06:19.479
to meet that need" ... delivering

115
00:06:19.479 --> 00:06:23.600
working software often, of the order of weeks rather than months or years; I mean

116
00:06:23.600 --> 00:06:24.410
that's the

117
00:06:24.410 --> 00:06:28.319
sort of critical thing really for human-computer interface from software

118
00:06:28.319 --> 00:06:28.810
development

119
00:06:28.810 --> 00:06:31.960
is just getting this you know as much as possible ...

120
00:06:31.960 --> 00:06:35.039
feedback on have we built something that you want?

121
00:06:35.039 --> 00:06:38.560
That can be very challenging of course if you can't engage with the

122
00:06:38.560 --> 00:06:40.330
customer.  The customer says: "right, I want you to build

123
00:06:40.330 --> 00:06:43.330
exactly this thing and don't talk to me for six months and come back and make it work".

124
00:06:44.180 --> 00:06:47.600
Challenging ... obviously you've got to meet the customer halfway

125
00:06:47.600 --> 00:06:50.810
in terms of how much time they can spend with you but yeah ...

126
00:06:50.810 --> 00:06:53.599
the measure of progress is actually getting the working software out because

127
00:06:53.599 --> 00:06:55.360
there's so many unknowns with the software

128
00:06:55.360 --> 00:06:59.229
... ideally you want sustainable development maintaining a constant pace

129
00:06:59.229 --> 00:07:02.770
... yeah, daily cooperation between everybody

130
00:07:02.770 --> 00:07:06.009
... the people on the business side, the developers that's ...

131
00:07:06.009 --> 00:07:09.910
I think thats ... it seems it, I mean some people say: "ooh you know

132
00:07:09.910 --> 00:07:13.919
really really big projects that you need ... you know you must have Waterfall, you must have

133
00:07:13.919 --> 00:07:15.210
spiral, or you must have like

134
00:07:15.210 --> 00:07:19.289
reams and reams of documentation.  I guess this is - you get to very very large and things like the Affordable Health Care act and

135
00:07:19.289 --> 00:07:20.210
there's all these

136
00:07:20.210 --> 00:07:23.220
regulations and teams of lawyers and so on and it's a totally different scale

137
00:07:23.220 --> 00:07:26.389
... even then, even if like it's just like one

138
00:07:26.910 --> 00:07:30.220
little little pocket in a larger picture having this

139
00:07:30.220 --> 00:07:33.349
communication you know regular communication and regular working with

140
00:07:33.349 --> 00:07:33.949
prototypes

141
00:07:33.949 --> 00:07:38.560
all the time just seems like ... how can you argue against that almost?  I guess

142
00:07:38.560 --> 00:07:42.599
I'm biased but ... so interesting here also in the Agile Principles

143
00:07:42.599 --> 00:07:45.539
is we've got ... face-to-face conversation best and so they recommend

144
00:07:45.539 --> 00:07:46.949
colocation

145
00:07:46.949 --> 00:07:51.099
in Agile and thats potential challenging. Right well distributed teams

146
00:07:51.099 --> 00:07:54.550
is kind of out of the window, we'll come back to that in a minute.

147
00:07:54.550 --> 00:07:58.190
... also you know you want motivated

148
00:07:58.190 --> 00:08:01.270
individuals that you trust ... basically

149
00:08:01.270 --> 00:08:06.580
if you've got a shall we say sort of an atmosphere or a culture of mistrust like we can't trust these people

150
00:08:06.580 --> 00:08:07.030
to do

151
00:08:07.030 --> 00:08:10.120
the right thing then it's maybe off to

152
00:08:10.120 --> 00:08:14.860
kind of a non-starter. Other things in the Agile (Manifesto) continuous attention to technical

153
00:08:14.860 --> 00:08:18.069
excellence and good design all the way through. Can anyone argue against that?

154
00:08:18.069 --> 00:08:21.440
... simplicity. This simplicity; my simplicity scalpel

155
00:08:21.440 --> 00:08:24.449
is often out in scrum meetings

156
00:08:24.449 --> 00:08:27.840
doing the Agile process it's ... just

157
00:08:27.840 --> 00:08:32.300
... complexity will kill almost any project that you start; whether

158
00:08:32.300 --> 00:08:35.620
it's software or not, but particularly software products and so keeping things

159
00:08:35.620 --> 00:08:39.409
absolutely absolutely simple as possible ... can't emphasize that enough

160
00:08:39.409 --> 00:08:42.750
... trying to allow teams to find their own

161
00:08:42.750 --> 00:08:45.930
organization-al structure that they prefer ...

162
00:08:45.930 --> 00:08:48.990
you know rather than imposing a top down thing. The difficult thing is when you've got

163
00:08:48.990 --> 00:08:52.940
you know reams and reams of procedures that you try and enforce top-down;

164
00:08:52.940 --> 00:08:58.050
people just sort of resist them ... and this again ... coming back to changing

165
00:08:58.050 --> 00:09:01.080
you know embracing change and then making changes to

166
00:09:01.839 --> 00:09:04.839
handle that change. So anyway, you guys are probably already

167
00:09:05.360 --> 00:09:08.360
reasonably familiar with Agile.  Agile;

168
00:09:08.860 --> 00:09:12.860
so this is the broader idea; the Agile philosophy; and then we've got particular sort of Scrum is

169
00:09:12.860 --> 00:09:13.970
the project management

170
00:09:13.970 --> 00:09:17.149
framework.  That's what we'll talk ... talk more about that in

171
00:09:17.149 --> 00:09:20.519
the next section and then we've got some XP

172
00:09:20.519 --> 00:09:23.860
... which ... I don't hear that term used so much anymore but so

173
00:09:23.860 --> 00:09:27.130
last week we were talking about distributed software development and a lot of those things

174
00:09:27.130 --> 00:09:30.540
coming-out of the XP world but so let's

175
00:09:30.540 --> 00:09:33.589
let's talk about distributed Agile and

176
00:09:33.589 --> 00:09:36.589
this is ... I guess it's you know

177
00:09:37.470 --> 00:09:41.279
these days everybody's working in a distributed framework

178
00:09:41.279 --> 00:09:45.959
and it's becoming more and more common and I think people are starting to say: "Oh, right, actually

179
00:09:45.959 --> 00:09:48.959
if we do have ... although

180
00:09:48.959 --> 00:09:52.709
we would perhaps like to have face to face conversations

181
00:09:52.709 --> 00:09:56.720
all the time new technologies like Skype and Google hangouts and other

182
00:09:56.720 --> 00:09:57.709
sort of things are

183
00:09:57.709 --> 00:10:01.060
making it so that you can do ... you can follow these Agile principles and you

184
00:10:01.060 --> 00:10:01.390
can

185
00:10:01.390 --> 00:10:04.440
conceivably even do it in a distributed environment.

186
00:10:04.440 --> 00:10:07.720
The real challenges is the distributed meeting ...

187
00:10:07.720 --> 00:10:11.060
is keeping people engaged ... the

188
00:10:11.060 --> 00:10:14.640
technical issues are ... they still plague a distributed meeting

189
00:10:14.640 --> 00:10:18.290
... working out how to handle those

190
00:10:18.290 --> 00:10:21.910
even how to sometimes use those to your advantage

191
00:10:21.910 --> 00:10:25.010
is key ... we'll talk more about this

192
00:10:25.010 --> 00:10:28.220
next week but I mean in some ways

193
00:10:28.220 --> 00:10:31.450
I would say yes these are troubles

194
00:10:31.450 --> 00:10:34.760
I think engagement in ... I guess the key thing engagement is in a

195
00:10:34.760 --> 00:10:37.890
a real life meeting you can kind of see that someone's attention has wandered and you

196
00:10:37.890 --> 00:10:39.600
can maybe respond to that more easily

197
00:10:39.600 --> 00:10:42.630
to a certain extent

198
00:10:42.630 --> 00:10:45.829
... I think you can almost just except

199
00:10:45.829 --> 00:10:49.019
if you doing Google hangouts and maybe you don't have as much

200
00:10:49.019 --> 00:10:52.070
information about where people are looking but

201
00:10:52.070 --> 00:10:55.160
you can see each of their screens that much more easily

202
00:10:55.160 --> 00:10:58.220
in a - in a face to face meeting and you're all sitting round a table and you've all got

203
00:10:59.459 --> 00:11:02.670
laptops or you're using a projector

204
00:11:03.250 --> 00:11:06.380
it's actually I would argue harder to kinda see

205
00:11:06.380 --> 00:11:09.510
what other people are looking at all the time.

206
00:11:09.510 --> 00:11:13.660
I'd say that even the face-to-face office the standard boardroom is not -

207
00:11:13.660 --> 00:11:16.950
is not necessarily, or a meeting room, is not necessarily perfectly designed in a way

208
00:11:16.950 --> 00:11:19.980
that allows you to share details about interfaces and software

209
00:11:20.750 --> 00:11:24.630
and so on. People often complain about a lack of them

210
00:11:24.630 --> 00:11:28.070
stickies, the inability to do breakout meetings. These

211
00:11:28.070 --> 00:11:31.300
actually to a degree ...

212
00:11:31.300 --> 00:11:34.790
not - the notion ... there are various softwares for shared whiteboard and

213
00:11:34.790 --> 00:11:37.490
stickies which then, they can have their own technical issues.

214
00:11:37.490 --> 00:11:41.040
I personally find in the distributed Agile meetings that we do

215
00:11:41.040 --> 00:11:45.060
for AgileVentures is that ... you can very easily have break outs because

216
00:11:45.560 --> 00:11:48.459
anybody can start a new Hangout; you can easily grab people and say oh just let's

217
00:11:48.459 --> 00:11:50.100
go and do a Hangout and we'll do this that and the other

218
00:11:50.100 --> 00:11:53.860
and being able to actually show people - you know - Google -

219
00:11:53.860 --> 00:11:57.089
draw - and so on - I find them

220
00:11:57.089 --> 00:12:00.700
you know - to be not such a big deal ... the key thing is time zones;

221
00:12:00.700 --> 00:12:03.550
that's managing the time zones that's something we struggle with all the

222
00:12:03.550 --> 00:12:04.019
time

223
00:12:04.019 --> 00:12:07.290
... we're working on software to support us you know helping

224
00:12:07.290 --> 00:12:10.389
people find each other but that definitely is a big challenge.

225
00:12:10.940 --> 00:12:14.709
But going back to the technologies in general you could kind of make this sort of

226
00:12:14.709 --> 00:12:16.019
list between

227
00:12:16.019 --> 00:12:19.639
the best to the worst communication experiences, going from

228
00:12:19.639 --> 00:12:23.589
face-to-face through big immersive video conferencing set-ups,

229
00:12:23.589 --> 00:12:27.220
standard video conferencing set-ups, then web conferencing which I guess we've got Google Hangouts and

230
00:12:27.750 --> 00:12:30.940
you could call Skype in there as well; phone conferences which I think people generally ...

231
00:12:30.940 --> 00:12:34.380
personally I think I would almost rather have

232
00:12:34.380 --> 00:12:37.690
an IM chat with people than a phone conference

233
00:12:38.220 --> 00:12:41.700
in as much as I can type quite fast and I can link to ... take a look at this, take

234
00:12:41.700 --> 00:12:42.279
a look at that.

235
00:12:42.279 --> 00:12:46.079
Phone conferences almost one of the most frustrating things in the world personally in my

236
00:12:46.079 --> 00:12:46.649
opinion

237
00:12:46.649 --> 00:12:50.079
but there is you know Wikis and forums, which is maybe a little better than email

238
00:12:50.079 --> 00:12:54.079
and maybe better than no communication. I mean I think all these different ... I'm

239
00:12:54.079 --> 00:12:58.310
not a big fan of ranking these things from best to worst; that's sort of what some other people are doing

240
00:12:58.310 --> 00:13:01.540
... in some ways I think all of these different technologies have

241
00:13:01.540 --> 00:13:04.769
different places and different roles that they can be used in managing a

242
00:13:04.769 --> 00:13:05.540
distributed team

243
00:13:05.540 --> 00:13:09.260
... in terms of you know communicating with a large, say you had 15,000

244
00:13:09.260 --> 00:13:10.639
students all studying the same thing online

245
00:13:10.639 --> 00:13:13.649
you know. We'll go into each of these

246
00:13:13.649 --> 00:13:16.660
in more detail next week but

247
00:13:16.660 --> 00:13:20.440
all of these things ... the technology has come on

248
00:13:20.440 --> 00:13:23.769
from I think where it was making the whole

249
00:13:23.769 --> 00:13:28.019
Agile process something that you can do in a distributed setting

250
00:13:28.019 --> 00:13:31.490
so - you know - if you're having these distributed meetings and you're doing Agile and are you doing (and you

251
00:13:31.490 --> 00:13:32.560
happen to be distributed)

252
00:13:32.560 --> 00:13:36.589
I think some key things that are important are allowing for at least a little bit of small

253
00:13:36.589 --> 00:13:37.120
talk

254
00:13:37.120 --> 00:13:40.730
to allow the people in the distributed group to sort of connect to each other

255
00:13:40.730 --> 00:13:44.079
... if you're in ... let's say a Hangout you know or

256
00:13:44.079 --> 00:13:47.310
a phone conference and you are introducing the speaker, that's very important. Trying to work out some

257
00:13:47.310 --> 00:13:51.410
kinda balance with the documentation of the meeting. We tend to -

258
00:13:51.410 --> 00:13:52.310
tend to

259
00:13:52.310 --> 00:13:56.110
record all of the videos so that people can catch up by watching those at some point. If there was an

260
00:13:56.110 --> 00:13:59.089
AI system that would like automatically transcribe notes that would be really handy.

261
00:13:59.089 --> 00:14:02.709
Mixing it up, making changes ... we'll talk about scrum

262
00:14:02.709 --> 00:14:05.899
next and about moving from you know people focused scrums to project focused scrums

263
00:14:05.899 --> 00:14:06.320
backwards and forwards.

264
00:14:06.320 --> 00:14:09.449
But basically - trying make sure that the procedures

265
00:14:09.449 --> 00:14:12.560
are clear ... really that's one

266
00:14:12.560 --> 00:14:15.620
of the most important things for ...

267
00:14:15.620 --> 00:14:19.769
getting ... these meetings not to explode in terms of the amount of time that they take

268
00:14:19.769 --> 00:14:23.690
... and we've talked already about distributed software development but I think

269
00:14:23.690 --> 00:14:24.480
these kinda things

270
00:14:24.480 --> 00:14:27.610
that ... having continuous integration set up, using

271
00:14:27.610 --> 00:14:30.670
pull requests, having this general model of: "right

272
00:14:30.670 --> 00:14:34.540
there's going to be as much automation as possible to check the work that's

273
00:14:34.540 --> 00:14:35.480
being done as possible,

274
00:14:35.480 --> 00:14:39.480
we're gonna have fantastic transparency

275
00:14:39.480 --> 00:14:42.930
for everyone to be able to see what other people are suggesting about what's going on with

276
00:14:42.930 --> 00:14:43.570
the code

277
00:14:43.570 --> 00:14:47.550
and so on" do make Agile work in a distributed

278
00:14:47.550 --> 00:14:50.760
setting and we'll show you various examples of that in the next section

279
00:14:50.760 --> 00:14:54.839
 ... we've been doing it for over a year now

280
00:14:54.839 --> 00:14:57.910
with AgileVentures and it seems to be working extremely well.  Alright bye for now.

